name: Python Test

# O pipeline será acionado em push para a branch main e pull requests
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test_and_sonar:
    runs-on: ubuntu-latest

    steps:
    # Passo 1: Faz o checkout do código do repositório
    - name: Check out repository
      uses: actions/checkout@v3
      with:
          fetch-depth: 0

    # Passo 2: Configura a versão do Python
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'

    # Passo 3: Instala as dependências do projeto
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install pytest pytest-cov

    # Passo 4: Executa os testes com pytest
    - name: Run tests and generate coverage report
      run: |
        pytest --cov=. --cov-report=xml

    # Passo 5: Verifica se o relatório de cobertura foi gerado
    - name: Verify coverage report
      run: |
        ls -l coverage.xml
        cat coverage.xml

    - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.python.coverage.reportPaths=coverage.xml

      
